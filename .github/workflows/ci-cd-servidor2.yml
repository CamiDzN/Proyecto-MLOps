name: CI/CD Servidor2

on:
  push:
    branches: [ main ]
    paths:
      - 'Servidor2/mlflow/**'
      - 'Servidor2/k8s/**'

permissions:
  contents: write

jobs:
  build-and-deploy:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout completo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Definir IMAGE_TAG
        run: echo "IMAGE_TAG=$(date +'%Y%m%d')-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build imagen de MLflow
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/mlflow-custom:${{ env.IMAGE_TAG }} ./Servidor2/mlflow

      - name: Login a DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push de imagen
        run: |
          docker push ${{ secrets.DOCKERHUB_USER }}/mlflow-custom:${{ env.IMAGE_TAG }}

      - name: Actualizar Kustomization
        run: |
          cd Servidor2/k8s
          kustomize edit set image ${{ secrets.DOCKERHUB_USER }}/mlflow-custom:${{ env.IMAGE_TAG }}

      - name: Commit de cambios de Kustomization
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          cd Servidor2/k8s
          # 1) Integrar cualquier commit que ya est√© en remoto
          git pull --rebase --autostash origin main

          # 2) Detectar cambios, commitear y pushear
          
          if git diff --quiet kustomization.yaml; then
            echo "No hay cambios en kustomization.yaml"
          else
            git add kustomization.yaml
            git commit -m "chore: actualizar imagen mlflow-custom ${{ env.IMAGE_TAG }}"
            git push origin main
          fi
