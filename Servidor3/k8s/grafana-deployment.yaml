apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: camidzn/grafana:initial
        ports:
        - containerPort: 3000

        env:
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: "Viewer"

        volumeMounts:
          # 1) Overwrite de grafana.ini para forzar [auth.anonymous] = true
          - name: grafana-ini-overrides
            mountPath: /etc/grafana/grafana.ini
            subPath: grafana.ini

          # 2) Montar PROVISIONING de datasources en la ruta exacta:
          - name: provisioning
            mountPath: /etc/grafana/provisioning/datasources/datasources.yml
            subPath: provisioning-datasources.yaml

          # 3) Montar PROVISIONING de dashboards (providers) en la ruta exacta:
          - name: provisioning
            mountPath: /etc/grafana/provisioning/dashboards/dashboards.yml
            subPath: provisioning-dashboards.yaml

          # 4) Montar los JSON de dashboards en /var/lib/grafana/dashboards
          - name: grafana-dashboards
            mountPath: /var/lib/grafana/dashboards

      volumes:
        # A) ConfigMap que contiene el override de grafana.ini
        - name: grafana-ini-overrides
          configMap:
            name: grafana-ini-overrides

        # B) ConfigMap que contiene:
        #    • provisioning-datasources.yaml
        #    • provisioning-dashboards.yaml
        - name: provisioning
          configMap:
            name: grafana-provisioning

        # C) ConfigMap que contiene los JSON de dashboards (inference_dashboard.json)
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
